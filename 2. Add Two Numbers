class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def addTwoNumbers(l1: ListNode, l2: ListNode) -> ListNode:
    # Create a dummy node to simplify the result list creation
    dummy = ListNode(0)
    current = dummy
    carry = 0
    
    # Traverse both linked lists
    while l1 is not None or l2 is not None or carry:
        # Get the values from the current nodes, if they exist
        val1 = l1.val if l1 is not None else 0
        val2 = l2.val if l2 is not None else 0
        
        # Calculate the sum and the carry
        total = val1 + val2 + carry
        carry = total // 10  # Update carry for the next iteration
        current.next = ListNode(total % 10)  # Create a new node with the digit
        current = current.next  # Move to the next node
        
        # Move to the next nodes in the linked lists
        if l1 is not None:
            l1 = l1.next
        if l2 is not None:
            l2 = l2.next
    
    # Return the next node of the dummy node, which is the head of the result list
    return dummy.next
